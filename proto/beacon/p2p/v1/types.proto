syntax = "proto3";

package ethereum.beacon.p2p.v1;

import "google/protobuf/timestamp.proto";

message BeaconState {
  uint64 validator_set_change_slot = 1;
  repeated ValidatorRecord validators = 2;
  repeated CrosslinkRecord crosslinks = 3;
  uint64 last_state_recalculation_slot = 4;
  uint64 last_finalized_slot = 5;
  uint64 justification_source = 6;
  uint64 prev_cycle_justification_source = 7;
  bytes justified_slot_bitfield = 8;
  repeated ShardAndCommitteeArray shard_and_committees_for_slots = 9;
  repeated uint32 persistent_committees = 10;
  repeated ShardReassignmentRecord persistent_committee_reassignment = 11;
  bytes next_shuffling_seed = 12;
  repeated uint64 deposits_penalized_in_period = 13;
  bytes validator_delta_hash_chain = 14;
  uint64 current_exit_seq = 15;
  uint64 genesis_time = 16;
  bytes processed_pow_receipt_root = 17;
  ForkData fork_data = 18; 
  repeated CandidatePowReceiptRootRecord candidate_pow_receipt_roots = 19;
  repeated ProcessedAttestation pending_attestations = 20;
  repeated bytes recent_block_hashes = 21;
  bytes randao_mix = 22;
}

message ValidatorRecord {
  bytes pubkey = 1;
  bytes withdrawal_credentials = 2;
  bytes randao_commitment = 3;
  uint64 randao_skips = 4;
  uint64 balance = 5;
  uint64 status = 6;
  uint64 last_status_change_slot = 7;
  uint64 exit_seq = 8;
}

message ShardReassignmentRecord {
  uint32 validator_index = 1;
  uint64 shard = 2;
  uint64 slot = 3;
}

message AggregatedAttestation {
  AttestationSignedData signed_data = 1;
  bytes attester_bitfield = 2;
  bytes poc_bitfield = 3;
  repeated uint64 aggregate_sig = 5;
}

message ProcessedAttestation {
  AttestationSignedData signed_data = 1;
  bytes attester_bitfield = 2;
  bytes poc_bitfield = 3;
  uint64 slot_included = 4;
}

message AttestationSignedData {
  uint64 slot = 1;
  uint64 shard = 2;
  bytes block_hash = 3;
  bytes cycle_boundary_hash = 4;
  bytes shard_block_hash = 5;
  bytes last_crosslink_hash = 6;
  uint64 justified_slot = 7;
  bytes justified_block_hash = 8;
}

message AttestationHashes {
  repeated bytes attestation_hash = 1;
}

message SpecialRecord {
    uint32 kind = 1;
    repeated bytes data = 2;
}

message CrosslinkRecord {
  bytes shard_block_hash = 1;
  uint64 slot = 2;
}

message ShardAndCommitteeArray {
  repeated ShardAndCommittee array_shard_and_committee = 1;
}

message ShardAndCommittee {
  uint64 shard = 1;
  repeated uint32 committee = 2;
}

message CandidatePowReceiptRootRecord {
  bytes candidate_pow_receipt_root = 1;
  uint64 votes = 2;
}

message ForkData {
  uint64 pre_fork_version = 1;
  uint64 post_fork_version = 2;
  uint64 fork_slot_number = 3;
}

message BeaconBlock {
  repeated bytes ancestor_hashes = 1;
  uint64 slot = 2;
  bytes randao_reveal = 3;
  bytes candidate_pow_receipt_root = 4;
  bytes state_root = 5;
  google.protobuf.Timestamp timestamp = 6;
  repeated AggregatedAttestation attestations = 7;
  repeated SpecialRecord specials = 8;
  repeated uint64 proposer_signature = 9;
}
